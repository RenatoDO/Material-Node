For this assignment, I've based my material node on Component Mask. Where I could replicate and rename my node
to Spectrum. I followed VectorNoise in the common.ush file hoping to find how to do shader calls, which I found out.
I added code similar to VectorNoise in MaterialExpressions.cpp, MaterialCompiler.h, and HLSLMaterialTranslator.cpp
in order to do the shader call. In common.ush I implemented the spectral functions given in the description of the 
assigment and following VectorNoise once again I replicated its code to match my material node and in a switch 
statement I called the spectral functions. Once in UE, I replicated the picture given in the assignment, and in a
discord post was mentioned that the Zucconi functions were not displaying the right color, so the professor told us
to raise the color values to the 2.2 power to mimic the colors in the browser. To get the multiplying part done,
I've added an extra multiply node before my Spectrum node and attached it to both inputs A and B in order to get the 
right colors in all of the spectrums. Also, I implemented the UENUM tooltips for all of the options, and right below
the name of my node, I added the name of each option when it's changed.

I tried the extra credit. In my material node, I added a spectrum type called visible that's supposed to call the
texture that I downloaded from the browser. I looked into noise and Sobol node in order to find where are these 2
nodes calling the texture and I've found the Sobol has a texture parameter defined in SceneView.h and implemented in 
SceneRendering.cpp as SobolSamplingTexture. Noise on the other hand its a little more complicated because in 
common.ush is calling Noise3D_Multiplexer and this function is calling GradientNoise3D_TEX. I've followed 
this function into Random.ush, GradientNoise3D_TEX is calling View.PerlinNoiseGradientTexture in which is only
PerlinNoiseGradientTexture is being defined and implemented in the same files that SobolSamplingTexture is. Also,
in the file SceneManagement.cpp both SobolSamplingTexture and PerlinNoiseGradientTexture are being declared. Here's
where I got lost because the implementations of Sobol and Perlin are completely different from what I need. Also, I 
couldn't find where to place the spectrum image I downloaded and how to make a call for it. 